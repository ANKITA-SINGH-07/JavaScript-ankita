// Online JavaScript Compiler
// Use this online editor to run JavaScript code online
// Write your code here
function greeting()
{
  console.log("He there")
}
//calling the function
greeting()

//function with parameter
function greeting2(fName)
{
  console.log("Hello" +" " +fName +"!")
}

greeting2("Ankita");

//more than one parameter

function sum(a,b)
{
  return a+b;
}
var x=sum(3,7);
console.log(x);

//Function with return values

function greet()
{
  return function(){
    console.log("Hello!");
  }
}

greet()();

function greet1(x){
  return function(name){
    console.log(x +" "+name +"!");
  }
}
greet1("hi")("hina");

//Pass by value and pass by reference.

//pass by value
var c=1;
function addOne(x){
  x++;
}
addOne(c);
console.log(c) //c is still one because only a copy of c was used in that function

//PASS BY value
var person1={
	name:"Mike",
	age:12
}
var person2=person1;
function addyear(person){
	person.age++;
}
addyear(person1);
console.log(person1)
console.log(person2)

//first class functions
//store a value inside a function
var sumfunc=function (a,b)
{
	return a+b;
}
console.log(sumfunc(1,3))

//use value to set object properties
var myphone={
	make:"Apple",
	model:"IPHONE 6",
	warranty:12,
	showwarrantydetails:function(){
		console.log("It has warranty " +this.warranty) //this deals with object we are currently dealing with.
	}
	
}
myphone.showwarrantydetails();

//pass value to a function
function f(x)
{
	return Math.pow(x,2);
}
console.log(f(2))

//pass value to function


function g(myfun,a,b){
	return myfun(a)+myfun(b)
}
console.log(g(f,3,4))

//have a function return a function
function add(x)
{
	return function(a)
	{
		return a+x;
	}
}

var adone=add(1);
console.log(adone(3))//adds one to any no u give

var addtwo=add(2);
console.log(addtwo(2))

//immediately invoke function
//function statement/declaration

function greet4(){
	console.log("hello")
}

greet4();

//u can also call greet4 before declaring the function.
greet5();
function greet5(){
	console.log("hello")
}

//function expression

var greet6=function(){
	console.log("hi greet6 ")
};


greet6()

//to immediately call it

var greet7=function(){
	console.log("hi greet7 ")
}();

(function(){
	console.log("bye")
	
})()


//BUILT IN JS FUNCTIONS

//PROMT
var x=prompt("Enter your age");

//ALERT
alert("Hi");

//EVAL
eval("var a=1;");
console.log(a)

-------------------SCOPING---------------------------------------------
var a=1;
//a is global variable,it is defined outside all function.
function f(x)
{
	return x+a;
}
console.log(f(2)); //3

//-----------------------------------------------------------------------

function f2(x){
	var a=2;//a is inside the scope of this function --> function specific.
	return x+a;
	}
console.log(f2(2))//it gives priority to a inside local scope not the global scope.

//-----------------------------------------------------------------------------------------------------
//If you define a again inside a function then the function will use the local variable a.

function g(a){
	return a+3;
}
console.log(g(3)); //6

//If a is not found in scope of function but found in the parameter then the value in parameter is considered.If
function j(a){
	var a=3
	return a+3;
}
console.log(j(10)) //priority given to variable defined in local scope than the one given in parameters


//discuss the priorites of variable in scoping

//1.local scope.
//2.parameter
//3.global